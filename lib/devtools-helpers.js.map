{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 1008d73ba6987ba4ac35","webpack:///./src/devtools-helpers.js","webpack:///./src/panel-helpers.js"],"names":[],"mappings":"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","file":"devtools-helpers.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1008d73ba6987ba4ac35\n **/","'use strict';\n\nimport PanelHelpers from './panel-helpers.js';\n\nexport default {\n  PanelHelpers\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/devtools-helpers.js\n **/","'use strict';\n\nexport default {\n  /**\n   * Connect to the bacground page,\n   * immediately initializing any scripts and listening for messages to forward\n   * @param emitter a node-sytle EventEmitter\n   */\n  connectToBackground(portName) {\n    return new Promise(function (resolve) {\n      // Create a connection to the background page\n      const port = chrome.runtime.connect({\n        name: portName\n      });\n\n      const listener = function (message) {\n        if (message.name === 'background:connect') {\n          port.onMessage.removeListener(listener);\n          resolve(port);\n        }\n      };\n\n      // tunnel from injected to emitter\n      port.onMessage.addListener(listener);\n    });\n  },\n\n  /**\n   * Inject the given content script.\n   * Requires the cooperation of background-helpers\n   * @param port\n   * @param contentScript\n   * @returns {Promise}\n   */\n  injectContent(port, contentScript) {\n    return new Promise(function (resolve) {\n      const listener = function (message) {\n        if (message.name === 'content:registered') {\n          port.onMessage.removeListener(listener);\n          resolve();\n        }\n      };\n\n      port.onMessage.addListener(listener);\n\n      port.postMessage({\n        name: 'register-content',\n        contentTabId: chrome.devtools.inspectedWindow.tabId,\n        file: contentScript\n      });\n    });\n  },\n\n  /**\n   * Tunnel events from the background page to the message emitter\n   * and from the message emitter to the background page\n   * Requires the cooperation of background-helpers, content-helpers, and injected-helpers\n   * @param port a chrome.runtime.Port\n   * @param emitter a node-style EventEmitter\n   * @return () -> void A function that disposes of the listeners\n   */\n  proxyEvents(port, emitter) {\n    const backgroundListener = function (message) {\n      if (message.name === 'tunnel:devtools') {\n        emitter.emit(message.event, message.payload);\n      }\n    };\n\n    const panelListener = function (event, payload) {\n      port.postMessage({\n        name: 'tunnel:injected',\n        event,\n        payload\n      });\n    };\n\n    const toInjected = 'tunnel:injected';\n    emitter.on(toInjected, panelListener);\n    port.onMessage.addListener(backgroundListener);\n\n    return function () {\n      emitter.removeListener(toInjected, panelListener);\n      port.onMessage.removeListener(backgroundListener);\n    };\n  },\n\n  /**\n   * Inject the given script file into the inspected window\n   * @param scriptFile\n   */\n  injectScript(scriptFile) {\n    return new Promise(function (resolve, reject) {\n      // URL scheme \"chrome-extension\" is not supported by Chrome's fetch yet\n      const injectedXHR = new XMLHttpRequest();\n      injectedXHR.open('get', scriptFile, true);\n      injectedXHR.addEventListener('load', function (xhrResult) {\n        const injectedScript = xhrResult.target.response;\n        chrome.devtools.inspectedWindow.eval(injectedScript, function (result, isException) {\n          if (isException) {\n            reject(result);\n          } else {\n            resolve(result);\n          }\n        });\n      });\n      injectedXHR.send();\n    });\n  },\n\n  /**\n   * A convenience method to forward messages, inject a content page,\n   * and inject an inspected script\n   * @param portName\n   * @param emitter a node-sytle event emitter\n   * @param contentScript the location of the content script to inject\n   * @param inspectedScript the location of the script to inject into the inspected window\n   * @returns {Promise} resolves when all scripts are injected\n   */\n  initializePanel(portName, emitter, contentScript, inspectedScript) {\n    const background = this.connectToBackground(portName);\n    const content = background.then((port) => {\n      this.proxyEvents(port, emitter);\n      return this.injectContent(port, contentScript).then(function () {\n        return port;\n      });\n    });\n    const injected = this.injectScript(inspectedScript);\n    return Promise.all([content, injected]).then(function ([port]) {\n      return port;\n    });\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/panel-helpers.js\n **/"],"sourceRoot":""}